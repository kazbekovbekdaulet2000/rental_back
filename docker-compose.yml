version: '3'

services:
  db:
    image: postgres:13.0-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
  web:
    build: .
    command:
      - /bin/sh
      - /app/scripts/entrypoint.sh
    container_name: rental_web
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - db
    expose:
      - "8000"
  redis:
    image: "redis:alpine"
  celery:
    build: .
    command: celery -A rental_back worker --loglevel=INFO --concurrency=2
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - web
      - redis
  bot:
    build: .
    command: python manage.py bot
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - web
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./static/:/static/
      - ./media/:/media/
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  data:
